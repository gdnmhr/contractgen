3173:	[		ADD: IMM, 		LB: RAW_RS2_1, 		ADD: OPCODE, 		ADD: RS2]
3976:	[		AUIPC: RD, 		DIVU: REG_RS2]
5903:	[		ADD: IMM, 		ADD: REG_RD, 		ADD: OPCODE, 		ADD: RS2, 		SLTI: RAW_RS2_1, 		ADD: REG_RS2]
6455:	[		SLT: RS1]
6312:	[		SH: MEM_ADDR, 		SH: IS_ALIGNED, 		ADDI: RAW_RS1_2, 		SH: RS1, 		SH: REG_RS1]
5046:	[		SRL: REG_RS2, 		ORI: RS1, 		ORI: REG_RS1, 		ORI: REG_RD]
6887:	[		ADDI: RAW_RS1_4, 		ADD: IMM, 		ADDI: RAW_RS1_2, 		ADDI: RAW_RS2_4, 		ADD: RS1, 		ADDI: RAW_RS2_2, 		ADD: OPCODE, 		ADD: RS2, 		SLL: RAW_RS1_1]
5899:	[		ADD: REG_RS1, 		SLTI: RAW_RS1_1, 		ADD: IMM, 		ADDI: RAW_RS1_2, 		ADD: REG_RD, 		ADD: RS1, 		ADDI: RAW_RS2_2, 		ADD: OPCODE, 		ADD: RS2]
834:	[		ADDI: RAW_RS1_4, 		MULHU: RAW_RS1_1, 		ADD: IMM, 		ADDI: RAW_RS1_2, 		ADDI: RAW_RS2_4, 		ADD: RS1, 		ADDI: RAW_RS2_2, 		ADD: OPCODE, 		ADD: RS2]
3057:	[		ADD: IMM, 		ADDI: WAW_3, 		ADD: RD, 		ADD: WAW_1, 		ADDI: WAW_2, 		ADDI: RAW_RS2_3, 		DIVU: WAW_1, 		ADDI: RAW_RS2_2, 		ADD: OPCODE, 		ADD: RS2]
7850:	[		AND: RAW_RS2_1, 		ADD: IMM, 		ADD: REG_RD, 		ADD: OPCODE, 		ADD: RS2, 		ADD: REG_RS2]
3644:	[		LBU: RAW_RS2_1, 		ADD: IMM, 		ADD: OPCODE, 		ADD: RS2]
1330:	[		AUIPC: RD]
834:	[		ADDI: RS2, 		ADDI: RAW_RS1_4, 		MULHU: RAW_RS1_1, 		ADDI: IMM, 		ADDI: RAW_RS1_2, 		ADDI: RAW_RS2_4, 		ADDI: OPCODE, 		ADDI: RAW_RS2_2, 		ADDI: RS1]
3420:	[		OR: RAW_RS2_4, 		OR: RD, 		DIVU: REG_RS2]
412:	[]
3949:	[		REM: RD, 		REM: WAW_1]
1200:	[		LH: MEM_ADDR, 		ADDI: WAW_1, 		SRA: REG_RS2, 		SRL: RD, 		SRA: REG_RD, 		ADDI: WAW_4, 		SRL: RAW_RS2_3, 		LH: REG_RS1]
6607:	[		ADDI: RD, 		ADDI: RS2, 		REMU: WAW_1, 		ADDI: WAW_3, 		ADDI: WAW_4, 		ADDI: IMM, 		ADD: WAW_1, 		ADDI: WAW_2, 		ADDI: OPCODE, 		ADDI: RAW_RS2_3, 		ADDI: RAW_RS2_2]
4630:	[		SLLI: REG_RD, 		SLLI: REG_RS2, 		SLLI: RS2]
2410:	[		SRLI: REG_RS1, 		ANDI: REG_RD, 		DIVU: REG_RS2, 		ANDI: RS1, 		SRLI: REG_RD, 		ANDI: REG_RS1]
3056:	[		DIVU: RAW_RS2_1, 		SW: MEM_W_DATA, 		SW: REG_RD, 		SW: REG_RS2, 		DIVU: RD]
3169:	[		ADD: IMM, 		LB: RAW_RS1_1, 		ADDI: RAW_RS1_2, 		ADD: RS1, 		ADDI: RAW_RS2_2, 		ADD: OPCODE, 		ADD: RS2]
3057:	[		ADDI: RD, 		ADDI: RS2, 		ADDI: WAW_3, 		ADDI: IMM, 		ADD: WAW_1, 		ADDI: WAW_2, 		ADDI: OPCODE, 		ADDI: RAW_RS2_3, 		DIVU: WAW_1, 		ADDI: RAW_RS2_2]
4402:	[		ADDI: RD, 		ADDI: RS2, 		REMU: WAW_1, 		ADDI: WAW_4, 		ADDI: IMM, 		ADDI: RAW_RS2_4, 		ADD: WAW_1, 		ADDI: WAW_2, 		ADDI: OPCODE, 		ADDI: RAW_RS2_2]
6607:	[		REMU: WAW_1, 		ADD: IMM, 		ADDI: WAW_3, 		ADDI: WAW_4, 		ADD: RD, 		ADD: WAW_1, 		ADDI: WAW_2, 		ADDI: RAW_RS2_3, 		ADDI: RAW_RS2_2, 		ADD: OPCODE, 		ADD: RS2]
2390:	[		XORI: RS1, 		XORI: REG_RD, 		DIVU: REG_RS2, 		XORI: REG_RS1]
3169:	[		ADDI: RS2, 		LB: RAW_RS1_1, 		ADDI: IMM, 		ADDI: RAW_RS1_2, 		ADDI: OPCODE, 		ADDI: RAW_RS2_2, 		ADDI: RS1]
6891:	[		ADD: IMM, 		ADD: OPCODE, 		ADD: RS2, 		SLL: RAW_RS2_1]
3168:	[		LB: RS1]
4402:	[		REMU: WAW_1, 		ADD: IMM, 		ADDI: WAW_4, 		ADD: RD, 		ADDI: RAW_RS2_4, 		ADD: WAW_1, 		ADDI: WAW_2, 		ADDI: RAW_RS2_2, 		ADD: OPCODE, 		ADD: RS2]
5196:	[		ADDI: RD, 		ADDI: RS2, 		BNE: RAW_RS2_2, 		BNE: RAW_RS2_4, 		ADDI: WAW_4, 		AND: WAW_1, 		AND: WAW_3, 		ADDI: IMM, 		ADDI: RAW_RS2_4, 		ADDI: WAW_2, 		ADDI: OPCODE, 		ADDI: RAW_RS2_2]
3173:	[		ADDI: RS2, 		LB: RAW_RS2_1, 		ADDI: IMM, 		ADDI: OPCODE]
6887:	[		ADDI: RS2, 		ADDI: RAW_RS1_4, 		ADDI: IMM, 		ADDI: RAW_RS1_2, 		ADDI: RAW_RS2_4, 		ADDI: OPCODE, 		ADDI: RAW_RS2_2, 		ADDI: RS1, 		SLL: RAW_RS1_1]
1755:	[		REMU: RD]
3644:	[		ADDI: RS2, 		LBU: RAW_RS2_1, 		ADDI: IMM, 		ADDI: OPCODE]
5196:	[		ADD: IMM, 		BNE: RAW_RS2_2, 		BNE: RAW_RS2_4, 		ADDI: WAW_4, 		AND: WAW_1, 		AND: WAW_3, 		ADD: RD, 		ADDI: RAW_RS2_4, 		ADDI: WAW_2, 		ADDI: RAW_RS2_2, 		ADD: OPCODE, 		ADD: RS2]
2598:	[		ADD: REG_RS1, 		MULHU: RAW_RS1_1, 		ADD: IMM, 		ADDI: RAW_RS1_2, 		ADD: REG_RD, 		ADD: RS1, 		ADDI: RAW_RS2_2, 		ADD: OPCODE, 		ADD: RS2]
4828:	[		DIVU: RS2, 		ADDI: RAW_RS2_3, 		DIVU: REG_RS2]
3516:	[		REM: RS2]
5051:	[		ORI: RAW_RS2_1, 		ADD: IMM, 		ADD: REG_RD, 		ADD: OPCODE, 		ADD: RS2, 		ADD: REG_RS2]
3707:	[		SLTIU: RD]
2602:	[		MULHU: RAW_RS2_1, 		ADD: IMM, 		ADD: REG_RD, 		ADD: OPCODE, 		ADD: RS2, 		ADD: REG_RS2]
4505:	[		LB: MEM_R_DATA, 		LB: IS_ALIGNED, 		LB: MEM_ADDR, 		LH: RAW_RS1_4, 		LB: REG_RS1, 		LB: IS_HALF_ALIGNED, 		LH: RD, 		LB: REG_RD]
838:	[		MULHU: RAW_RS2_1, 		ADD: IMM, 		ADD: OPCODE, 		ADD: RS2]
6461:	[		ADD: IMM, 		ADD: REG_RD, 		ADD: OPCODE, 		ADD: RS2, 		ADD: REG_RS2, 		SLT: RAW_RS2_1]
5899:	[		ADDI: RS2, 		SLTI: RAW_RS1_1, 		ADDI: IMM, 		ADDI: REG_RS1, 		ADDI: RAW_RS1_2, 		ADDI: OPCODE, 		ADDI: RAW_RS2_2, 		ADDI: RS1, 		ADDI: REG_RD]
4548:	[		SH: MEM_ADDR, 		SH: IS_ALIGNED, 		SH: MEM_W_DATA, 		SH: RS1, 		SH: IS_HALF_ALIGNED, 		SH: REG_RS1]
2598:	[		ADDI: RS2, 		MULHU: RAW_RS1_1, 		ADDI: IMM, 		ADDI: REG_RS1, 		ADDI: RAW_RS1_2, 		ADDI: OPCODE, 		ADDI: RAW_RS2_2, 		ADDI: RS1, 		ADDI: REG_RD]
4831:	[		REM: WAW_2, 		REM: RD]
838:	[		ADDI: RS2, 		MULHU: RAW_RS2_1, 		ADDI: IMM, 		ADDI: OPCODE]
859:	[		DIVU: RS2, 		DIVU: REG_RS2]
1520:	[		ORI: IMM, 		ORI: REG_RS2, 		ORI: REG_RD]
3346:	[		SUB: RS1, 		SUB: REG_RS1, 		SUB: REG_RD]
6613:	[		SLL: REG_RD, 		REMU: RD, 		SLL: RD, 		SLL: RS1, 		SLL: OPCODE, 		SLL: REG_RS1, 		REMU: RAW_RS1_1]
3170:	[		LB: IMM, 		LB: MEM_ADDR, 		LB: REG_RS2]
4109:	[		SH: MEM_ADDR, 		SH: IMM, 		SH: IS_ALIGNED, 		SH: IS_HALF_ALIGNED]
6578:	[		DIV: RAW_RS1_1, 		ADDI: RAW_RS1_3, 		ADD: IMM, 		ADDI: RAW_RS1_2, 		ADD: RS1, 		ADDI: RAW_RS2_3, 		ADDI: RAW_RS2_2, 		ADD: OPCODE, 		ADD: RS2]
3063:	[		DIVU: RAW_RS1_1, 		SW: REG_RD, 		SW: MEM_ADDR, 		DIVU: RD, 		SW: REG_RS1, 		SW: IS_HALF_ALIGNED]
416:	[		LHU: IS_HALF_ALIGNED, 		DIVU: RAW_RS1_1, 		LHU: REG_RD, 		LHU: IS_ALIGNED, 		LHU: MEM_ADDR, 		LHU: MEM_R_DATA, 		DIVU: RD, 		LHU: REG_RS1]
6578:	[		ADDI: RS2, 		DIV: RAW_RS1_1, 		ADDI: RAW_RS1_3, 		ADDI: IMM, 		ADDI: RAW_RS1_2, 		ADDI: OPCODE, 		ADDI: RAW_RS2_3, 		ADDI: RAW_RS2_2, 		ADDI: RS1]
6613:	[		REMU: RD, 		XOR: OPCODE, 		XOR: REG_RD, 		XOR: RD, 		XOR: RS1, 		REMU: RAW_RS1_1, 		XOR: REG_RS1]
4602:	[		ORI: RD]
6891:	[		ADDI: RS2, 		ADDI: IMM, 		ADDI: OPCODE, 		SLL: RAW_RS2_1]
7473:	[		DIVU: RD]
6312:	[		SH: MEM_ADDR, 		SH: IS_ALIGNED, 		SH: MEM_W_DATA, 		SH: RS1, 		SH: REG_RS1]
